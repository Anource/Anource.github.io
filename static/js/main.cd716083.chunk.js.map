{"version":3,"sources":["App.js","index.js"],"names":["App","props","state","activeView","popout","openPopout","bind","closePopout","this","setState","actions","title","autoclose","mode","onClose","activePanel","id","placeholder","size","onClick","React","Component","bridge","send","ReactDOM","render","document","getElementById"],"mappings":"miBAuEeA,G,gEA9DX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CACTC,WAAY,QACZC,OAAQ,MAEZ,EAAKC,WAAa,EAAKA,WAAWC,KAAhB,gBAClB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBARJ,E,yDAYfE,KAAKC,SAAS,CACVL,OAAQ,kBAAC,IAAD,CACJM,QAAS,CAAC,CAACC,MAAO,6CAAWC,WAAW,EAAMC,KAAM,WACpDC,QAASN,KAAKD,aACd,iFAAkB,6H,oCAK1BC,KAAKC,SAAS,CAACL,OAAQ,S,+BAIvB,OACE,kBAAC,IAAD,CAAMD,WAAYK,KAAKN,MAAMC,YAC3B,kBAAC,IAAD,CAAMC,OAAQI,KAAKN,MAAME,OAAQW,YAAY,YAAYC,GAAG,SAC1D,kBAAC,IAAD,CAAOA,GAAG,aACR,kBAAC,IAAD,qFACA,kBAAC,IAAD,KACA,kBAAC,IAAD,uJACF,kBAAC,IAAD,CAAOC,YAAY,iFAEjB,kBAAC,IAAD,KACA,kBAAC,IAAD,gQACF,kBAAC,IAAD,CAAOA,YAAY,iFAEjB,kBAAC,IAAD,KACA,kBAAC,IAAD,6CACF,kBAAC,IAAD,CAAOA,YAAY,iFAEjB,kBAAC,IAAD,KACA,kBAAC,IAAD,6CACF,kBAAC,IAAD,CAAOA,YAAY,iFAEjB,kBAAC,IAAD,KACA,kBAAC,IAAD,6CACF,kBAAC,IAAD,CAAOA,YAAY,iFAEhB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQC,KAAK,KAAKL,KAAK,UAAUM,QAASX,KAAKH,YAA/C,uG,GApDDe,IAAMC,YCAxBC,IAAOC,KAAK,gBAEZC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.cd716083.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\n//import View from '@vkontakte/vkui/dist/components/View/View';\nimport { View, Panel, PanelHeader, Header, Group, Cell, Root, Input, Div, Button, Alert } from '@vkontakte/vkui';\n\nimport Icon28MessageOutline from '@vkontakte/icons/dist/28/message_outline';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            activeView: 'view1',\n            popout: null\n        };\n        this.openPopout = this.openPopout.bind(this);\n        this.closePopout = this.closePopout.bind(this);\n    }\n    \n    openPopout() {\n        this.setState({\n            popout: <Alert \n                actions={[{title: 'Отлично', autoclose: true, mode: 'cancel'}]}\n                onClose={this.closePopout}>\n                <h2>Угадайка!</h2><p>Вы набрали 0 очков!</p></Alert>\n            })\n    }\n    \n    closePopout() {\n        this.setState({popout: null})\n    }\n    \n    render() {\n        return (\n          <Root activeView={this.state.activeView}>\n            <View popout={this.state.popout} activePanel=\"panel-1-1\" id=\"view1\">\n              <Panel id=\"panel-1-1\">\n                <PanelHeader>Игра \"Угадайка!\"</PanelHeader>\n                <Group>\n                <Cell>Какое самое глубокое озеро?</Cell>\n              <Input placeholder=\"Введите ответ..\" />\n                </Group>\n                <Group>\n                <Cell>Какое нелепое животное имеет черно-белый окрас?</Cell>\n              <Input placeholder=\"Введите ответ..\" />\n                </Group>\n                <Group>\n                <Cell>Вопрос</Cell>\n              <Input placeholder=\"Введите ответ..\" />\n                </Group>\n                <Group>\n                <Cell>Вопрос</Cell>\n              <Input placeholder=\"Введите ответ..\" />\n                </Group>\n                <Group>\n                <Cell>Вопрос</Cell>\n              <Input placeholder=\"Введите ответ..\" />\n                </Group>\n                 <Div>\n                   <Button size=\"xl\" mode=\"primary\" onClick={this.openPopout}>Отправить ответы</Button>\n                 </Div>\n              </Panel>\n            </View>\n          </Root> \n        )\n    }\n}\n\n\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}